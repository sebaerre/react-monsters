{"version":3,"sources":["logo.svg","components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","console","log","monsters","map","SearchBox","onChange","e","type","placeholder","App","searchFieldHandler","setState","searchField","target","value","state","fetch","then","response","json","users","filteredMonsters","this","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAAe,I,kBCGFA,EAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACA,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCHTC,EAAW,SAACR,GAErB,OADAS,QAAQC,IAAIV,GACL,qBAAKC,UAAU,YAAf,SACND,EAAMW,SAASC,KAAI,SAAAR,GAAO,OACvB,cAAC,EAAD,CAAMA,QAASA,UCLVS,G,MAAY,SAACb,GAAD,OACrB,uBAAOC,UAAU,SAASa,SAAU,SAAAC,GAAC,OAAIf,EAAMc,SAASC,IAAIC,KAAK,SAASC,YAAajB,EAAMiB,gBCqClFC,G,wDAlCb,aAAc,IAAD,8BACX,gBAeJC,mBAAqB,SAACJ,GACpB,EAAKK,SAAS,CAACC,YAAaN,EAAEO,OAAOC,SAdnC,EAAKC,MAAO,CACVb,SAAU,GACVU,YAAa,IALJ,E,qDASb,WAAoB,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAE,EAAKT,SAAS,CAACT,SAAUkB,S,oBAQxC,WAAS,IAAD,OACAC,EAAmBC,KAAKP,MAAMb,SAASqB,QAAO,SAAA5B,GAAO,OAAIA,EAAQE,KAAK2B,cAAcC,SAAS,EAAKV,MAAMH,gBAC9G,OACE,sBAAKpB,UAAU,MAAf,UACA,kDACA,cAAC,EAAD,CAAWgB,YAAY,kBAAkBH,SAAUiB,KAAKZ,qBACxD,cAAC,EAAD,CAAUR,SAAUmB,W,GA3BRK,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.65b5ba49.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport './card.styles.css';\n\nexport const Card = props=>(\n    <div className='card-container'>\n    <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\n    <h2>{props.monster.name}</h2>\n    <p>{props.monster.email}</p>\n    </div>\n);","import React from 'react';\nimport './card-list.styles.css';\nimport {Card} from '../card/card.component';\n\nexport const CardList = (props) => {\n    console.log(props);\n    return(<div className='card-list'>\n    {props.monsters.map(monster=>(\n        <Card monster={monster}></Card>\n      ))}\n    </div>);\n}   ","import React from 'react';\nimport './search-box.styles.css';\n\nexport const SearchBox = (props) => (\n    <input className='search' onChange={e => props.onChange(e)} type='search' placeholder={props.placeholder}/>\n)\n\n","import logo from './logo.svg';\nimport {CardList} from './components/card-list/card-list.component.jsx'\nimport React, {Component} from 'react';\nimport {SearchBox} from './components/search-box/search-box.component.jsx';\nimport './App.css';\n\nclass App extends Component{\n  constructor(){\n    super();\n\n    this.state= {\n      monsters: [],\n      searchField: ''\n    };\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users=>this.setState({monsters: users}));\n    \n  }\n\nsearchFieldHandler = (e) => {\n  this.setState({searchField: e.target.value});\n} \n\n  render(){\n    const filteredMonsters = this.state.monsters.filter(monster => monster.name.toLowerCase().includes(this.state.searchField));\n    return(\n      <div className='App'>\n      <h1>Monsters Rolodex</h1>\n      <SearchBox placeholder='Search monsters' onChange={this.searchFieldHandler}/>\n      <CardList monsters={filteredMonsters}></CardList>\n      </div>\n\n    )\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}